[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/unite.vim'

[[plugins]]
repo = 'Shougo/denite.nvim'

[[plugins]]
repo = 'scrooloose/syntastic'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
let g:indent_guides_enable_on_vim_startup = 1
'''

[[plugins]]
repo = 'Shougo/vimfiler.vim'
hook_add = '''
let g:vimfiler_as_default_explorer = 1
'''

[[plugins]]
repo = 'cocopon/iceberg.vim'
hook_add = '''
colorscheme iceberg
'''

[[plugins]]
repo = 'fatih/vim-go'
hook_add = '''
let g:go_fmt_command = 'goimports'
let g:go_metalinter_autosave = 1
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
set laststatus=2
let g:lightline = {
    \'colorscheme': 'wombat',
    \'mode_map': {
    \    'c': 'NORMAL'
    \},
    \'active': {
    \    'left':  [['mode', 'paste'],
    \              ['fugitive', 'absolutepath']],
    \    'right': [['syntastic', 'lineinfo'],
    \              ['percent'],
    \              ['fileformat', 'fileencoding', 'filetype']]
    \},
    \'component_function': {
    \    'modified': 'LightlineModified',
    \    'readonly': 'LightlineReadonly',
    \    'fugitive': 'LightlineFugitive',
    \    'filename': 'LightlineFilename',
    \    'fileformat': 'LightlineFileformat',
    \    'filetype': 'LightlineFiletype',
    \    'fileencoding': 'LightlineFileencoding',
    \    'mode': 'LightlineMode'
    \},
    \'component_expand': {
    \    'syntastic': 'SyntasticStatuslineFlag'
    \},
    \'component_type': {
    \    'syntastic': 'error'
    \}
\}
function! LightlineModified()
    return &ft =~ 'help\|vimfiler\|gundo' ? '' : &modified ? '+' : &modifiable ? '' : '-'
endfunction

function! LightlineReadonly()
    return &ft !~? 'help\|vimfiler\|gundo' && &readonly ? 'x' : ''
endfunction

function! LightlineFilename()
  return ('' != LightlineReadonly() ? LightlineReadonly() . ' ' : '') .
        \ (&ft == 'vimfiler' ? vimfiler#get_status_string() :
        \  &ft == 'dein' ? dein#get_status_string() :
        \  &ft == 'denite' ? denite#get_status_string() :
        \  '' != expand('%:t') ? expand('%:t') : '[No Name]') .
        \ ('' != LightlineModified() ? ' ' . LightlineModified() : '')
endfunction

function! LightlineFugitive()
    if &ft !~? 'vimfiler\|gundo' && exists('*fugitive#head')
        return fugitive#head()
    else
        return ''
    endif
endfunction

function! LightlineFileformat()
    return winwidth(0) > 70 ? &fileformat : ''
endfunction

function! LightlineFiletype()
    return winwidth(0) > 70 ? (&filetype !=# '' ? &filetype : 'no ft') : ''
endfunction

function! LightlineFileencoding()
    return winwidth(0) > 70 ? (&fenc !=# '' ? &fenc : &enc) : ''
endfunction

function! LightlineMode()
    return winwidth(0) > 60 ? lightline#mode() : ''
endfunction
'''
